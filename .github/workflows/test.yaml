name: Test
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
permissions: read-all
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true
jobs:
  compatibility:
    name: Check Dependency Compatibility
    runs-on: ubuntu-latest
    environment:
      name: code_quality
    permissions:
      checks: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          activate-environment: true
      - name: Install the project
        run: uv sync --frozen --no-install-project
  format:
    name: Format
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment:
      name: code_quality
    needs: compatibility
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          activate-environment: true
      - name: Trunk install
        uses: trunk-io/trunk-action/setup@75699af9e26881e564e9d832ef7dc3af25ec031b # v1
      - name: Format
        run: $TRUNK_PATH fmt --all --no-progress
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@28e16e81777b558cc906c8750092100bbb34c5e3 # v7
        with:
          commit_message: "[Trunk] Apply Format"
  check:
    name: Check
    runs-on: ubuntu-latest
    environment:
      name: code_quality
    needs: format
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          activate-environment: true
      - name: Install the project
        run: uv sync --frozen
      - name: Trunk Code Quality
        uses: trunk-io/trunk-action@75699af9e26881e564e9d832ef7dc3af25ec031b # v1
  clean_jupyter:
    name: Clean Jupyter Notebooks
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment:
      name: code_quality
    needs: compatibility
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          activate-environment: true
      - name: Install nb-clean
        run: uv tool install nb-clean
      - name: Clean
        run: nb-clean clean -o -e ${{ github.workspace }}/notebooks/
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@28e16e81777b558cc906c8750092100bbb34c5e3 # v7
        with:
          commit_message: "[nb-clean] Apply Clean Jupyter Notebooks"
  check_jupyter:
    name: Check Jupyter Notebooks
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    environment:
      name: code_quality
    needs: clean_jupyter
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          activate-environment: true
      - name: Install nb-clean
        run: uv tool install nb-clean
      - name: Check
        run: nb-clean check -o -e ${{ github.workspace }}/notebooks/
